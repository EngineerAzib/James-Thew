@model James_Thew.context.Racipies_james

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .container {
        margin-top: 20px;
    }

    .card {
        border: 1px solid #ccc;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        background-color: darkcyan;
        color: white;
        text-align: center;
        padding: 15px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: bold;
    }

    input[type="text"],
    textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
    }

    .checkbox label {
        font-weight: normal;
    }

    .custom-file-input {
        cursor: pointer;
    }

    .btn-primary {
        background-color: #007BFF;
        border: none;
        padding: 10px 20px;
        font-size: 18px;
        color: white;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white text-center">
                    <h2>Add Recepies</h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Racipies_james", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal mt-5">
                            <h4>Racipies_james</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Ingredient, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Ingredient, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Ingredient, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CookingProcedure, htmlAttributes: new { @class = "control-label col-md-10" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.CookingProcedure, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CookingProcedure, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsFree, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsFree)
                                        @Html.ValidationMessageFor(model => model.IsFree, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Image", new { @class = "control-label col-md-2" })
                                <div class="custom-file">
                                    <input type="file" class="custom-file-input" id="ImageFile" name="ImageFile" required />
                                    <label class="custom-file-label" id="custom-file-label" for="ImageFile">Choose image...</label>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    // Get the file input element and the custom file label element
    var fileInput = document.getElementById('ImageFile');
    var customFileLabel = document.getElementById('custom-file-label');

    // Add an event listener for the file input change event
    fileInput.addEventListener('change', function (e) {
        // Get the selected file name
        var fileName = e.target.files[0].name;

        // Update the custom file label text
        customFileLabel.textContent = fileName;
    })
</script>
